name: FÃ¡brica CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  validate:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]
        python-version: [3.9, 3.11]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Node.js dependencies
        if: hashFiles('package-lock.json') != ''
        run: npm ci

      - name: Install Python dependencies
        if: hashFiles('requirements.txt') != ''
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Validate SOP
        run: ./fabrica/validate_sop.sh

      - name: Run Gatekeeper
        run: ./fabrica/gatekeeper.sh
        continue-on-error: false

      - name: Upload validation logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: validation-logs-${{ matrix.node-version }}-${{ matrix.python-version }}
          path: |
            fabrica/
            treino_torre/
            pipeline/
          retention-days: 30

  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then npm ci; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run security audit (npm)
        if: hashFiles('package-lock.json') != ''
        run: npm audit --audit-level=high

      - name: Run security audit (pip)
        if: hashFiles('requirements.txt') != ''
        run: pip-audit -r requirements.txt

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
